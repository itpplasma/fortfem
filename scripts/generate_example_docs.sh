#!/bin/bash
# Temporarily disable set -e to see actual errors
# set -e

echo "üî® Generating example documentation pages..."
echo "Current directory: $(pwd)"
echo "Available directories:"
ls -la

# Directories
EXAMPLE_DIR="example"
DOC_EXAMPLES_DIR="doc/examples"
ARTIFACTS_DIR="artifacts/plots"
OUTPUT_DIR="$DOC_EXAMPLES_DIR/generated"

# Create output directory
mkdir -p "$OUTPUT_DIR"

# Initialize the examples index page
cat > "$DOC_EXAMPLES_DIR/index.md" << 'EOF'
---
title: Examples
---

# FortFEM Examples

This page provides an overview of the example programs included with FortFEM, complete with source code listings and generated plots.

## Running Examples

To run any example:
```bash
fpm run --example <example_name>
```

To list all available examples:
```bash
fpm run --example --list
```

## Available Examples

EOF

# Process each example directory
example_count=0
for example_dir in "$EXAMPLE_DIR"/*/; do
    echo "üîç Checking directory: $example_dir"
    if [[ ! -d "$example_dir" ]]; then
        echo "No example directories found in $EXAMPLE_DIR"
        continue
    fi
    
    example_name=$(basename "$example_dir")
    example_file="$example_dir/${example_name}.f90"
    example_readme="$example_dir/README.md"
    
    echo "üîç Looking for: $example_file"
    if [[ ! -f "$example_file" ]]; then
        echo "‚ö†Ô∏è  No ${example_name}.f90 found in $example_dir, skipping..."
        continue
    fi
    
    echo "üìÑ Processing example: $example_name"
    
    # Create individual example page
    example_doc="$OUTPUT_DIR/${example_name}.md"
    
    # Start building the example page
    cat > "$example_doc" << EOF
---
title: $example_name Example
---

# $example_name Example

EOF
    
    # Add README content if it exists
    if [[ -f "$example_readme" ]]; then
        echo "üìñ Adding README for $example_name"
        cat "$example_readme" >> "$example_doc"
        echo "" >> "$example_doc"
    else
        # Generate basic description from program comment if available
        first_comment=$(grep -m 1 "^[[:space:]]*!" "$example_file" 2>/dev/null | sed 's/^[[:space:]]*![[:space:]]*//' || echo "")
        if [[ -n "$first_comment" ]]; then
            echo "$first_comment" >> "$example_doc"
            echo "" >> "$example_doc"
        fi
    fi
    
    # Add usage section
    cat >> "$example_doc" << EOF
## Usage

\`\`\`bash
fpm run --example $example_name
\`\`\`

## Source Code

\`\`\`fortran
EOF
    
    # Add source code with line numbers
    cat "$example_file" >> "$example_doc"
    
    cat >> "$example_doc" << EOF
\`\`\`

## Generated Plots

EOF
    
    # Find and add related plots
    plot_found=false
    if [[ -d "$ARTIFACTS_DIR" ]]; then
        echo "üñºÔ∏è  Looking for plots in $ARTIFACTS_DIR for $example_name"
        
        # Look for plots that match the example name or are generated by it
        for plot_pattern in "${example_name}"*.png "$example_name"_*.png "${example_name/-/_}"*.png; do
            for plot_file in "$ARTIFACTS_DIR"/$plot_pattern; do
                if [[ -f "$plot_file" ]]; then
                    plot_name=$(basename "$plot_file")
                    rel_plot_path="../../../artifacts/plots/$plot_name"
                    echo "  Found plot: $plot_name"
                    
                    cat >> "$example_doc" << EOF
### $plot_name

![${plot_name}](${rel_plot_path})

EOF
                    plot_found=true
                fi
            done
        done
        
        # Also look for generic patterns based on example type
        case "$example_name" in
            *poisson*)
                for plot_file in "$ARTIFACTS_DIR"/poisson*.png "$ARTIFACTS_DIR"/mesh*.png; do
                    if [[ -f "$plot_file" ]]; then
                        plot_name=$(basename "$plot_file")
                        rel_plot_path="../../../artifacts/plots/$plot_name"
                        echo "  Found related plot: $plot_name"
                        
                        cat >> "$example_doc" << EOF
### $plot_name

![${plot_name}](${rel_plot_path})

EOF
                        plot_found=true
                    fi
                done
                ;;
            *curl*)
                for plot_file in "$ARTIFACTS_DIR"/curl*.png "$ARTIFACTS_DIR"/curlcurl*.png; do
                    if [[ -f "$plot_file" ]]; then
                        plot_name=$(basename "$plot_file")
                        rel_plot_path="../../../artifacts/plots/$plot_name"
                        echo "  Found related plot: $plot_name"
                        
                        cat >> "$example_doc" << EOF
### $plot_name

![${plot_name}](${rel_plot_path})

EOF
                        plot_found=true
                    fi
                done
                ;;
            *mesh*)
                for plot_file in "$ARTIFACTS_DIR"/mesh*.png; do
                    if [[ -f "$plot_file" ]]; then
                        plot_name=$(basename "$plot_file")
                        rel_plot_path="../../../artifacts/plots/$plot_name"
                        echo "  Found related plot: $plot_name"
                        
                        cat >> "$example_doc" << EOF
### $plot_name

![${plot_name}](${rel_plot_path})

EOF
                        plot_found=true
                    fi
                done
                ;;
        esac
    fi
    
    if [[ "$plot_found" == false ]]; then
        echo "  No plots found for $example_name"
        cat >> "$example_doc" << EOF
*No plots available for this example.*

EOF
    fi
    
    # Add footer
    cat >> "$example_doc" << EOF

---

[‚Üê Back to Examples](index.html) | [FortFEM Documentation](../index.html)
EOF
    
    # Add to examples index
    echo "  Adding to index..."
    example_description=$(head -n 20 "$example_file" | grep -m 1 "^[[:space:]]*!" 2>/dev/null | sed 's/^[[:space:]]*![[:space:]]*//' || echo "Example program")
    cat >> "$DOC_EXAMPLES_DIR/index.md" << EOF
- [$example_name](generated/${example_name}.html) - $example_description
EOF
    
    echo "  ‚úÖ Completed processing $example_name"
    ((example_count++))
done

echo "üìù Processing complete, finalizing index..."

# Complete the examples index
echo "üìù Adding final sections to index file..."
cat >> "$DOC_EXAMPLES_DIR/index.md" << 'EOF'

## Creating Your Own Examples

To create a new example:

1. Create a new file in `example/` directory
2. Follow the minimal FEniCS-style pattern
3. Optionally create a `<example_name>_README.md` file for detailed documentation

## Visualization

FortFEM provides built-in plotting via fortplotlib:

```fortran
! Scalar field plotting
call plot(uh, filename="solution.png", plot_title="Poisson Solution", colormap="viridis")

! Vector field plotting  
call plot(Eh, filename="field.png", plot_type="streamplot", plot_title="E Field")

! Mesh plotting
call plot(mesh, filename="mesh.png", plot_title="FEM Mesh")
```

Available colormaps: `viridis`, `plasma`, `jet`, `coolwarm`, `hot`, `gray`

---

[‚Üê Back to Documentation](../index.html)
EOF

echo "‚úÖ Generated documentation for $example_count examples"

# Copy plots to documentation directory for FORD
if [[ -d "$ARTIFACTS_DIR" ]]; then
    echo "üìÅ Copying plots to documentation directory..."
    mkdir -p build/doc/artifacts/plots || true
    cp -r "$ARTIFACTS_DIR"/* build/doc/artifacts/plots/ 2>/dev/null || true
    echo "‚úÖ Plots copied to build/doc/artifacts/plots/"
else
    echo "üìÅ No artifacts directory found, skipping plot copy"
fi

echo "üéâ Example documentation generation complete!"